//8-bit Wallace Tree multiplier for unsigned integers

CHIP MultiplierUS8
{
	IN X[8], Y[8];
	OUT Z[8], OF;

	PARTS:
		InputsUS(X = X, Y = Y, PP0 = PP0, PP1 = PP1, PP2 = PP2, PP3 = PP3, PP4 = PP4, PP5 =  PP5, PP6 = PP6, PP7 = PP7); //Takes multiplicand and multiplier operands and generates 16-bit partial products

		MultiUS(PP0 = PP0, PP1 = PP1, PP2 = PP2, PP3 = PP3, PP4 = PP4, PP5 =  PP5, PP6 = PP6, PP7 = PP7, P = Ztemp); //Takes partial products and generates the 16-bit product (sum of the partial products)

		OutputsUS(in = Ztemp, out = Z, OF = OF); //Takes the 16-bit product and reduces it to the required 8 bits, also returning the overflow bit
}