//Generates 8-bit product and overflow bit from 16-bit form of product

CHIP OutputsUS
{
	IN in[16];
	OUT out[8], OF;

	PARTS:
		And(a = in[0], b = in[0], out = out[0]);
		And(a = in[1], b = in[1], out = out[1]);
		And(a = in[2], b = in[2], out = out[2]);
		And(a = in[3], b = in[3], out = out[3]);
		And(a = in[4], b = in[4], out = out[4]);
		And(a = in[5], b = in[5], out = out[5]);
		And(a = in[6], b = in[6], out = out[6]);
		And(a = in[7], b = in[7], out = out[7]); //The 8-bit product is simply the bits 0-7 of the 16-bit product, which is achieved by the ands with identical inputs

		Or8(a = in[8], b = in[9], c = in[10], d = in[11], e = in[12], f = in[13], g = in[14], h = in[15], out = OF); //Overflow condition: OF = P8 + P9 + ... + PP15
}