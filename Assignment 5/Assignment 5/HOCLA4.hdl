CHIP HOCLA4
{
	IN X[4], Y[4], cin;
	OUT PH, GH, S[4];

	PARTS:
		Xor(a = X[0], b = Y[0], out = P0);
		Xor(a = X[1], b = Y[1], out = P1);
		Xor(a = X[2], b = Y[2], out = P2);
		Xor(a = X[3], b = Y[3], out = P3); //Propagate terms (first level) ready

		And(a = X[0], b = Y[0], out = G0);
		And(a = X[1], b = Y[1], out = G1);
		And(a = X[2], b = Y[2], out = G2);
		And(a = X[3], b = Y[3], out = G3); //Generate terms (first level) ready

		And4(a = P3, b = P2, c = P1, d = P0, out = PH); //Higher order Propagate term ready

		And4(a = P3, b = P2, c = P1, d = G0, out = t1);
		And3(a = P3, b = P2, c = G1, out = t2);
		And(a = P3, b = G2, out = t3);
		Or4(a = t1, b = t2, c = t3, d = G3, out = GH); //Higher order Generate term ready

		And(a = P0, b = cin, out = PC0);
		Or(a = PC0, b = G0, out = c1);
		And(a = P1, b = c1, out = PC1);
		Or(a = PC1, b = G1, out = c2);
		And(a = P2, b = c2, out = PC2);
		Or(a = PC2, b = G2, out = c3);

		Xor(a = P0, b = cin, out = S[0]);
		Xor(a = P1, b = c1, out = S[1]);
		Xor(a = P2, b = c2, out = S[2]);
		Xor(a = P3, b = c3, out = S[3]); //Sum bits ready
}