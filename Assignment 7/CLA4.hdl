CHIP CLA4
{
	IN a[4],b[4],c;
	OUT sum[4],carry3;
	PARTS:
	Xor(a=a[0],b=b[0],out=p0);		//p0
	Xor(a=a[1],b=b[1],out=p1);		//p1
	Xor(a=a[2],b=b[2],out=p2);		//p2
	Xor(a=a[3],b=b[3],out=p3);		//p3
	And(a=a[0],b=b[0],out=g0);		//g0
	And(a=a[1],b=b[1],out=g1);		//g1
	And(a=a[2],b=b[2],out=g2);		//g2
	And(a=a[3],b=b[3],out=g3);		//g3

	And(a=p0,b=c,out=p0c0);
	Or(a=p0c0,b=g0, out=c1);

	And3(a[0]=p1,a[1]=p0,a[2]=c,out=p1p0c0);
	And(a=p1,b=g0,out=p1g0);
	Or3(a[0]=p1p0c0,a[1]=p1g0,a[2]=g1,out=c2);

	And4(a[0]=p2,a[1]=p1,a[2]=p0,a[3]=c,out=p2p1p0c0);
	And3(a[0]=p2,a[1]=p1,a[2]=g0,out=p2p1g0);
	And(a=p2,b=g1,out=p2g1);
	Or4(a[0]=p2p1p0c0,a[1]=p2p1g0,a[2]=p2g1,a[3]=g2,out=c3);

	Xor(a=p0,b=c,out=sum[0]);
	Xor(a=p1,b=c1,out=sum[1]);
	Xor(a=p2,b=c2,out=sum[2]);
	Xor(a=p3,b=c3,out=sum[3]);
	And(a=c3, b=c3, out=carry3);
}