/*
	7-bit 2-to-1 MUX
	If source(s) = 0 gives x1 as output(z)
	else if source(s) = 1 gives y1 as output(z)
*/
CHIP MUX7-bit2-1{
IN x1[7], y1[7], s;
OUT z[7];

PARTS:
Not(in=s, out=nots);
And(a=nots, b=x1[0], out=z10);
And(a=nots, b=x1[1], out=z11);
And(a=nots, b=x1[2], out=z12);
And(a=nots, b=x1[3], out=z13);
And(a=nots, b=x1[4], out=z14);
And(a=nots, b=x1[5], out=z15);
And(a=nots, b=x1[6], out=z16);

And(a=s, b=y1[0], out=z20);
And(a=s, b=y1[1], out=z21);
And(a=s, b=y1[2], out=z22);
And(a=s, b=y1[3], out=z23);
And(a=s, b=y1[4], out=z24);
And(a=s, b=y1[5], out=z25);
And(a=s, b=y1[6], out=z26);

Or(a=z10, b=z20, out=z[0]);
Or(a=z11, b=z21, out=z[1]);
Or(a=z12, b=z22, out=z[2]);
Or(a=z13, b=z23, out=z[3]);
Or(a=z14, b=z24, out=z[4]);
Or(a=z15, b=z25, out=z[5]);
Or(a=z16, b=z26, out=z[6]);
}