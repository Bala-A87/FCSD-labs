CHIP CPUhack {

    IN instruction[16],inM[16],reset;
    OUT outM[16],writeM,addressM[15],pc[15];
    PARTS:

    instdecoder(in=instruction,writeD=writeD,writeA=writeA,mux1=mux1,mux2=mux2,writeM=writeM);  //Generation of control signals for various parts

    Mux16(a=ALUout, b=instruction, sel=mux1, out=o1);                                           //MUX1
    ARegister(in=o1, load=writeA, out=o2,out[0..14]=addressM);                                  //ARegister write/read

    Mux16(a=o2, b=inM, sel=mux2, out=y);                                                        //MUX2
    DRegister(in=ALUout, load=writeD, out=x);                                                   //DRegister write/read

    ALUhack(x=x, 
            y=y,                                                                                //input x&y (respective) to the alu
            zx=instruction[11],
            nx=instruction[10], 
            zy=instruction[9], 
            ny=instruction[8], 
            f=instruction[7], 
            no=instruction[6],                                                                  //All control signals from input instruction
            out=ALUout,
            out=outM, 
            zr=zr, 
            ng=ng);                                                                             //output of ALU
    
    PCcontrol(i=instruction,ng=ng,zr=zr,j=J);                                                   //program counter(PC) load computation 
    PC(in=o2, load=J, inc=true, reset=reset, out[0..14]=pc);                                    //PC
}